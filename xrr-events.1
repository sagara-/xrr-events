.TH XRR-EVENTS 1 "November 12, 2011" "0.8.1" "xrr-events"
.SH NAME
xrr-events \- An lightweight XRandR event handler daemon
.\"
.SH SYNOPSIS
.B xrr-events \--help
.br
.B xrr-events \--version
.br
.B xrr-events
.RB [ \-\-daemonize ]
.RB [ \-\-kill ]
.RB [ \-\-replace ]
.RB [ \-\-script\-filename = \c
.IR FILENAME ]
.RB [ \-\-log\-level = \c
.IR LEVEL ]
.\"
.SH DESCRIPTION
.B xrr-events
is a user-level daemon that runs a user-provided executable every time an output (such as a monitor) is added, removed, or changed (for example, when its resolution is modified).
.\"
.SH OPTIONS
The following options are supported:
.\"
.TP
.B \-\-help
Show summary of options and exit.
.\"
.TP
.B \-\-version
Show version of program and exit.
.\"
.TP
.B \-\-daemonize
Fork into the background after initialization.
.\"
.TP
.B \-\-kill
Kill any running copy and exit.
.\"
.TP
.B \-\-replace
When used with \-\-kill, will replace the running process.
.\"
.TP
\fB\-\-log\-level\fP[=\fILEVEL\fP]
Only output messages greater or equal than the given log level (1=debug, 2=info(default), 3=error)..
.\"
.TP
\fB\-\-script\-filename\fP[=\fIFILENAME\fP]
Use the given file as the event script.
.\"
.SH FILES
.TP
~/.config/xrr-events
Location of log files and configuration data
.\"
.TP
~/.config/xrr-events/xrr-events.conf
Configuration file. Commandline options can be written here to avoid specifying them. Format is `key=value` where an option takes a value (eg: script-file), and `key` where the option does not (eg: daemonize)
.\"
.TP
~/.config/xrr-events/event-handler
Default event handler location (override via \-\-script\-file option). Any output will go to xrr-events' stdout/stderr.
.\"
.TP
~/.cache/xrr-events.pid
PID file for the currently running copy.
.\"
.SH EXAMPLE
The following is an example event-handler script:
.nf

#!/bin/bash

if [ $# -lt 4 ]; then
    echo "Wrong number of args: $#"
    exit -1
fi

#the output name (eg: HDMI1, LVDS1, etc)
output_name="$1"
#either Connected or Disconnected
connection_state="$2"
#resolution as a string (eg: 1366x768), or None if output isn't currently enabled
mode_name="$3"
#one of: normal, left, right, inverted (see xrandr(1))
rotation="$4"

if [ ${output_name} != "HDMI1" ]; then
    echo "Ignoring output: ${output_name}"
    exit 0
fi

if [ ${connection_state} = "Connected" -a ${mode_name} == "None" ]; then
    echo "Turning on output"
    xrandr --output HDMI1 --auto --right-of LVDS1
    #to set wallpaper for screen 2
    nitrogen --restore
elif [ ${connection_state} = "Disconnected" -a ${mode_name} != "None" ]; then
    echo "Turning off output"
    xrandr --output HDMI1 --off
fi
.fi
.\"
.SH AUTHOR
Kevin Tardif <kiyoka@gmail.com>
